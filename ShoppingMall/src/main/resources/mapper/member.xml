<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<select id="login" parameterType="memberVO"
		resultType="memberVO">
		select user_id, user_pw, level from member where user_id = #{user_id} and user_pw = #{user_pw}
	</select>

	<insert id="create" parameterType="memberVO">
		insert into member values (#{user_id}, #{user_pw}, #{user_name}, #{user_age}, #{user_tel}, #{user_tag}, #{user_addr}, 1)
		<!-- db에 있는 컬럼 전부 써줘야한다. -->
	</insert>

	<select id="idCheck" parameterType="String" resultType="memberVO"><!-- 반환값은 memberVO이다. -->
		select * from member where user_id = #{user_id}
		<!-- dao에서 가져온 user_id가 #{user_id}로 들어감. -->
		<!-- resultType="memberVO"이므로, 리턴값 memberVO를 가지고 MemberDAO로 감 -->
	</select>

	<!-- 비밀번호변경설정 db의 user_id로 select해서 변경. -->
	<select id="modyPw" parameterType="memberVO" resultType="memberVO">
		select * from member where user_id = #{user_id}
	</select>

	<update id="update" parameterType="memberVO">
		update member set user_pw=#{user_pw}, user_name= #{user_name} where user_id = #{user_id}
	</update>

	<delete id="delete" parameterType="memberVO">
		delete from member where user_id = #{user_id}
	</delete>

	<select id="myPage" parameterType="memberVO"
		resultType="memberVO"><!--id가 MemberVO랑 연결되는거인지 찾아보기 -->
		select * from member where user_id = #{user_id}
	</select>

	<!-- 관리자 회원관리 페이지 회원전체조회-->	
	<!-- 관리자가 회원검색 -->
	<!-- 페이징처리 
	get 리스트는 searchVO의 firstIndex와 recordCountPerPage는 sql중, 리스트 마지막 부분에 사용됨.
	limit 이 부분, 예를 들어 recordCountPerPage가 10이고
	 pageIndex(MemberPageVO에서 생성한 객체(MemberVO에서 extends했으므로 MemberPageVO객체 사용가능))가 0이면 0번째 인덱스부터 10개를 보여준다는 의미. -->
	<select id="readAll"  parameterType="memberVO" resultType="memberVO"><!--id가 MemberVO랑 연결되는거인지 찾아보기 -->
		select * from member
		<where>
			<if test="keyword != null">
				AND user_name LIKE CONCAT ('%',#{keyword},'%') 
			</if>
		</where>
		limit #{recordCountPerPage} offset #{start}
	</select>
  	  
	<select id="readOne" resultType="memberVO"><!--id가 MemberVO랑 연결되는거인지 찾아보기-->
		select * from member where user_id = #{user_id}
	 </select>
	
<!-- 	<select id="getList" parameterType="MemberVO" resultType="MemberVO">
	<![CDATA[
		select * from member 
	]]>
	<![CDATA[
		order by user_id desc
		limit #{recordCountPerPage} offset #{firstIndex}
	]]> 
	</select>-->
	<!-- 페이징처리를 위한 회원 총개수 가져오기(resultType은 int로 한다.) -->
	<select id="getListCnt"  parameterType="memberVO" resultType="Integer">
		select count(*) from member
	</select>
</mapper>
